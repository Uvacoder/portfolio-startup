:where(input, select, textarea) {
  --input-border-color: var(--color-surface-4);
  --input-border-style: solid;
  --input-border-width: 1px;
  --input-bg: var(--color-surface-0);
  --input-bg-checked: var(--color-brand-1);
  --input-color-icon: var(--color-surface-3);
  --input-color-icon-checked: var(--surface-0-light);
  --input-color-text: currentcolor;
  --input-padding: var(--space-xs);
  --input-shadow: var(--shadow-1);
}

input:-webkit-autofill {
  font: inherit;
}

input:autofill {
  font: inherit;
}

label:has(+ input:required):after,
input:required + label:after {
  content: "*";
  color: var(--color-text-invalid);
  margin-inline-start: var(--space-2xs);
}

:where(
    input:not(
        [type="checkbox"],
        [type="radio"],
        [type="range"],
        [type="submit"],
        [type="reset"]
      ),
    select,
    textarea
  ) {
  appearance: none;
  padding: var(--input-padding);
  inline-size: 100%;
  border: var(--input-border-width) var(--input-border-style)
    var(--input-border-color);
  background-color: var(--input-bg);
  border-radius: var(--radius-xs);
  color: var(--input-color-text);
  min-block-size: calc(
    1rem * var(--font-line-height) + var(--input-padding) * 2 +
      var(--input-border-width) * 2
  );
  box-shadow: var(--input-shadow);
  display: inline-grid;
}

select {
  background-image: var(--icon-chevron);
  background-repeat: no-repeat;
  background-position: right 0.5em top 50%, 0 0;
  background-size: 0.8em;
  padding-inline-end: 1.75em;
}

fieldset {
  --inline-wrap-row-gap: var(--space-2xs);
  border: 0;
  margin-inline: 0;
  padding: 0;
  display: grid;
  gap: var(--space-2xs);
}

legend {
  max-width: 100%;
  margin-block-end: var(--space-s);
  color: inherit;
  white-space: normal;
  padding: 0;
  display: block;
}

label {
  display: inline-block;
}

:where(input, textarea, select)[aria-invalid="false"] {
  --input-border-color: var(--color-border-success);
  --input-color-text: var(--color-text-success);

  & + .hint {
    color: var(--color-text-success);
  }
}

:where(input, textarea, select)[aria-invalid="true"] {
  --input-border-color: var(--color-border-invalid);
  --input-color-text: var(--color-text-invalid);

  & + .hint {
    color: var(--color-text-invalid);
  }
}

:where(input, textarea, select)[disabled] {
  --input-border-color: var(--color-surface-1);
  --input-bg: var(--color-surface-1);
  --input-color-text: var(--color-text-2);
  --input-shadow: none;
  cursor: not-allowed;
  opacity: 1;
  -webkit-text-fill-color: var(--input-color-text);
}

input[type="checkbox"],
input[type="radio"] {
  --_size: 1em;
  -webkit-appearance: none;
  appearance: none;
  font: inherit;
  outline-offset: var(--focus-outline-offset);
  inline-size: var(--_size);
  block-size: var(--_size);
  flex-shrink: 0;
  margin: 0;
}

input[type="checkbox"]:where(:not([role="switch"])),
input[type="radio"] {
  border: var(--input-border-width) var(--input-border-style)
    var(--input-border-color);
  background-color: var(--input-bg);
  border-radius: var(--radius-xs);
  color: var(--input-color-text);
  align-items: center;
  justify-items: center;
  display: grid;
  overflow: hidden;
  box-shadow: var(--input-shadow);
}

input[type="checkbox"]:where(:not([role="switch"]))::before,
input[type="radio"]:before {
  --_offset: 6px;
  content: "";
  inline-size: calc(100% - var(--_offset));
  block-size: calc(100% - var(--_offset));
  background-color: var(--input-color-icon-checked);
  opacity: 0;
  transition: transform 0.2s var(--ease-out);
}

input[type="checkbox"]:where(:not([role="switch"]))::before {
  clip-path: polygon(14% 44%, 0 65%, 50% 100%, 100% 16%, 80% 0%, 43% 62%);
  transform: translateY(100%);
}

input[type="checkbox"]:where(:not([role="switch"])):checked {
  --input-bg: var(--input-bg-checked);
  --input-border-color: var(--input-bg-checked);
}

input[type="checkbox"]:where(:not([role="switch"])):checked::before {
  opacity: 1;
  transform: translateY(0);
}

input[type="radio"] {
  border-radius: var(--radius-circle);
}

input[type="radio"]::before {
  border-radius: inherit;
  background-color: var(--input-bg-checked);
  box-shadow: 0 0 0 2px var(--input-color-icon-checked);
  transform: scale(0);
}

input[type="radio"]:checked {
  --input-border-color: var(--input-bg-checked);
}

input[type="radio"]:checked::before {
  opacity: 1;
  transform: scale(1);
}
